// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account_request.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type AccountRequest struct {
	AccountNumber        string   `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Balance              float64  `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountRequest) Reset()         { *m = AccountRequest{} }
func (m *AccountRequest) String() string { return proto.CompactTextString(m) }
func (*AccountRequest) ProtoMessage()    {}
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32ec3829ba78adf1, []int{0}
}

func (m *AccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountRequest.Unmarshal(m, b)
}
func (m *AccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountRequest.Marshal(b, m, deterministic)
}
func (m *AccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRequest.Merge(m, src)
}
func (m *AccountRequest) XXX_Size() int {
	return xxx_messageInfo_AccountRequest.Size(m)
}
func (m *AccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRequest proto.InternalMessageInfo

func (m *AccountRequest) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *AccountRequest) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// The response message containing the greetings
type AccountReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountReply) Reset()         { *m = AccountReply{} }
func (m *AccountReply) String() string { return proto.CompactTextString(m) }
func (*AccountReply) ProtoMessage()    {}
func (*AccountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_32ec3829ba78adf1, []int{1}
}

func (m *AccountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountReply.Unmarshal(m, b)
}
func (m *AccountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountReply.Marshal(b, m, deterministic)
}
func (m *AccountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountReply.Merge(m, src)
}
func (m *AccountReply) XXX_Size() int {
	return xxx_messageInfo_AccountReply.Size(m)
}
func (m *AccountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountReply proto.InternalMessageInfo

func (m *AccountReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The request message containing the user's name.
type PaymentRequest struct {
	FromAccountNumber    string   `protobuf:"bytes,1,opt,name=from_account_number,json=fromAccountNumber,proto3" json:"from_account_number,omitempty"`
	ToAccountNumber      string   `protobuf:"bytes,2,opt,name=to_account_number,json=toAccountNumber,proto3" json:"to_account_number,omitempty"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentRequest) Reset()         { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()    {}
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32ec3829ba78adf1, []int{2}
}

func (m *PaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRequest.Unmarshal(m, b)
}
func (m *PaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRequest.Marshal(b, m, deterministic)
}
func (m *PaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRequest.Merge(m, src)
}
func (m *PaymentRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentRequest.Size(m)
}
func (m *PaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRequest proto.InternalMessageInfo

func (m *PaymentRequest) GetFromAccountNumber() string {
	if m != nil {
		return m.FromAccountNumber
	}
	return ""
}

func (m *PaymentRequest) GetToAccountNumber() string {
	if m != nil {
		return m.ToAccountNumber
	}
	return ""
}

func (m *PaymentRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// The response message containing the greetings
type PaymentReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentReply) Reset()         { *m = PaymentReply{} }
func (m *PaymentReply) String() string { return proto.CompactTextString(m) }
func (*PaymentReply) ProtoMessage()    {}
func (*PaymentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_32ec3829ba78adf1, []int{3}
}

func (m *PaymentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentReply.Unmarshal(m, b)
}
func (m *PaymentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentReply.Marshal(b, m, deterministic)
}
func (m *PaymentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentReply.Merge(m, src)
}
func (m *PaymentReply) XXX_Size() int {
	return xxx_messageInfo_PaymentReply.Size(m)
}
func (m *PaymentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentReply.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentReply proto.InternalMessageInfo

func (m *PaymentReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TestMessage struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMessage) Reset()         { *m = TestMessage{} }
func (m *TestMessage) String() string { return proto.CompactTextString(m) }
func (*TestMessage) ProtoMessage()    {}
func (*TestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_32ec3829ba78adf1, []int{4}
}

func (m *TestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMessage.Unmarshal(m, b)
}
func (m *TestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMessage.Marshal(b, m, deterministic)
}
func (m *TestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMessage.Merge(m, src)
}
func (m *TestMessage) XXX_Size() int {
	return xxx_messageInfo_TestMessage.Size(m)
}
func (m *TestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TestMessage proto.InternalMessageInfo

func (m *TestMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*AccountRequest)(nil), "proto.AccountRequest")
	proto.RegisterType((*AccountReply)(nil), "proto.AccountReply")
	proto.RegisterType((*PaymentRequest)(nil), "proto.PaymentRequest")
	proto.RegisterType((*PaymentReply)(nil), "proto.PaymentReply")
	proto.RegisterType((*TestMessage)(nil), "proto.TestMessage")
}

func init() { proto.RegisterFile("account_request.proto", fileDescriptor_32ec3829ba78adf1) }

var fileDescriptor_32ec3829ba78adf1 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0x41, 0x4f, 0x32, 0x31,
	0x14, 0xa4, 0x7c, 0xf9, 0x30, 0x3e, 0x05, 0x42, 0x09, 0x66, 0x83, 0x17, 0xd2, 0xc4, 0x48, 0x3c,
	0x34, 0x46, 0x13, 0x0f, 0x26, 0x1e, 0xc0, 0x83, 0x5e, 0x34, 0x88, 0x26, 0x1e, 0x49, 0x59, 0x9e,
	0x40, 0xd2, 0xd2, 0xb5, 0x5b, 0x54, 0xae, 0xc6, 0x1f, 0x6e, 0xba, 0x5b, 0x16, 0x96, 0xa0, 0x07,
	0x4f, 0xdb, 0x99, 0x37, 0xf3, 0x3a, 0x9d, 0x85, 0x86, 0x08, 0x43, 0x3d, 0x9f, 0xd9, 0x81, 0xc1,
	0xd7, 0x39, 0xc6, 0x96, 0x47, 0x46, 0x5b, 0x4d, 0xff, 0x27, 0x1f, 0xf6, 0x00, 0x95, 0x4e, 0x3a,
	0xef, 0xa7, 0x63, 0x7a, 0x04, 0x95, 0xa5, 0x63, 0x36, 0x57, 0x43, 0x34, 0x01, 0x69, 0x91, 0xf6,
	0x6e, 0xbf, 0xec, 0xd9, 0xfb, 0x84, 0xa4, 0x01, 0xec, 0x0c, 0x85, 0x14, 0xb3, 0x10, 0x83, 0x62,
	0x8b, 0xb4, 0x49, 0x7f, 0x09, 0x59, 0x1b, 0xf6, 0xb3, 0x95, 0x91, 0x5c, 0x38, 0xa5, 0xc2, 0x38,
	0x16, 0x63, 0xf4, 0x9b, 0x96, 0x90, 0x7d, 0x11, 0xa8, 0xf4, 0xc4, 0x42, 0xe1, 0xea, 0x76, 0x0e,
	0xf5, 0x17, 0xa3, 0xd5, 0x60, 0x6b, 0x84, 0x9a, 0x1b, 0x75, 0x72, 0x31, 0x4e, 0xa0, 0x66, 0xf5,
	0xa6, 0xba, 0x98, 0xa8, 0xab, 0x56, 0xe7, 0xb5, 0x07, 0x50, 0x12, 0xca, 0xe1, 0xe0, 0x5f, 0x92,
	0xd8, 0x23, 0x17, 0x38, 0x4b, 0xf1, 0x7b, 0xe0, 0x63, 0xd8, 0x7b, 0xc2, 0xd8, 0xde, 0xa5, 0xf0,
	0x67, 0xe1, 0xd9, 0x67, 0x31, 0xeb, 0xf5, 0x11, 0xcd, 0xdb, 0x34, 0x44, 0x7a, 0x05, 0xe5, 0x6b,
	0x83, 0xc2, 0xa2, 0xe7, 0x69, 0x23, 0xfd, 0x13, 0x3c, 0xdf, 0x7f, 0xb3, 0xbe, 0x49, 0x47, 0x72,
	0xc1, 0x0a, 0x2b, 0xbb, 0x8f, 0x9a, 0xd9, 0xf3, 0x05, 0x66, 0xf6, 0xf5, 0x17, 0xb1, 0x02, 0xbd,
	0x04, 0xb8, 0x41, 0xfb, 0xb7, 0xab, 0x2f, 0x00, 0xd2, 0x57, 0xdb, 0x89, 0x1e, 0x51, 0xea, 0x45,
	0x6b, 0x45, 0x34, 0xb7, 0x70, 0xac, 0xd0, 0x3d, 0x85, 0xc3, 0xa9, 0xe6, 0x63, 0x13, 0x85, 0x1c,
	0x3f, 0x84, 0x8a, 0x24, 0xc6, 0x7c, 0x82, 0x52, 0xea, 0x77, 0x6d, 0xe4, 0xa8, 0x5b, 0xbd, 0x75,
	0xe7, 0x67, 0x77, 0xee, 0x39, 0x77, 0x8f, 0x0c, 0x4b, 0xc9, 0x9a, 0xf3, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x7c, 0xa9, 0x5d, 0x17, 0xb4, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	// Sends a greeting
	CreateAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountReply, error)
	CreatePayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentReply, error)
	GetAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountReply, error)
	TestMethod(ctx context.Context, in *TestMessage, opts ...grpc.CallOption) (*TestMessage, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountReply, error) {
	out := new(AccountReply)
	err := c.cc.Invoke(ctx, "/proto.AccountService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreatePayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentReply, error) {
	out := new(PaymentReply)
	err := c.cc.Invoke(ctx, "/proto.AccountService/CreatePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountReply, error) {
	out := new(AccountReply)
	err := c.cc.Invoke(ctx, "/proto.AccountService/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) TestMethod(ctx context.Context, in *TestMessage, opts ...grpc.CallOption) (*TestMessage, error) {
	out := new(TestMessage)
	err := c.cc.Invoke(ctx, "/proto.AccountService/TestMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	// Sends a greeting
	CreateAccount(context.Context, *AccountRequest) (*AccountReply, error)
	CreatePayment(context.Context, *PaymentRequest) (*PaymentReply, error)
	GetAccount(context.Context, *AccountRequest) (*AccountReply, error)
	TestMethod(context.Context, *TestMessage) (*TestMessage, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccount(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreatePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreatePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/CreatePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreatePayment(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccount(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_TestMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).TestMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/TestMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).TestMethod(ctx, req.(*TestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _AccountService_CreateAccount_Handler,
		},
		{
			MethodName: "CreatePayment",
			Handler:    _AccountService_CreatePayment_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _AccountService_GetAccount_Handler,
		},
		{
			MethodName: "TestMethod",
			Handler:    _AccountService_TestMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account_request.proto",
}
