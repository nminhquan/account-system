// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node_request.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	NodeId               string   `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	RmNodeAddr           string   `protobuf:"bytes,3,opt,name=rm_node_addr,json=rmNodeAddr,proto3" json:"rm_node_addr,omitempty"`
	RaftNodeAddr         string   `protobuf:"bytes,4,opt,name=raft_node_addr,json=raftNodeAddr,proto3" json:"raft_node_addr,omitempty"`
	JoinRaft             bool     `protobuf:"varint,5,opt,name=join_raft,json=joinRaft,proto3" json:"join_raft,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRequest) Reset()         { *m = NodeRequest{} }
func (m *NodeRequest) String() string { return proto.CompactTextString(m) }
func (*NodeRequest) ProtoMessage()    {}
func (*NodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa9f13ee9f98f95c, []int{0}
}

func (m *NodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRequest.Unmarshal(m, b)
}
func (m *NodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRequest.Marshal(b, m, deterministic)
}
func (m *NodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRequest.Merge(m, src)
}
func (m *NodeRequest) XXX_Size() int {
	return xxx_messageInfo_NodeRequest.Size(m)
}
func (m *NodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRequest proto.InternalMessageInfo

func (m *NodeRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *NodeRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeRequest) GetRmNodeAddr() string {
	if m != nil {
		return m.RmNodeAddr
	}
	return ""
}

func (m *NodeRequest) GetRaftNodeAddr() string {
	if m != nil {
		return m.RaftNodeAddr
	}
	return ""
}

func (m *NodeRequest) GetJoinRaft() bool {
	if m != nil {
		return m.JoinRaft
	}
	return false
}

type NodeReturn struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeReturn) Reset()         { *m = NodeReturn{} }
func (m *NodeReturn) String() string { return proto.CompactTextString(m) }
func (*NodeReturn) ProtoMessage()    {}
func (*NodeReturn) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa9f13ee9f98f95c, []int{1}
}

func (m *NodeReturn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeReturn.Unmarshal(m, b)
}
func (m *NodeReturn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeReturn.Marshal(b, m, deterministic)
}
func (m *NodeReturn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeReturn.Merge(m, src)
}
func (m *NodeReturn) XXX_Size() int {
	return xxx_messageInfo_NodeReturn.Size(m)
}
func (m *NodeReturn) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeReturn.DiscardUnknown(m)
}

var xxx_messageInfo_NodeReturn proto.InternalMessageInfo

func (m *NodeReturn) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*NodeRequest)(nil), "proto.NodeRequest")
	proto.RegisterType((*NodeReturn)(nil), "proto.NodeReturn")
}

func init() { proto.RegisterFile("node_request.proto", fileDescriptor_aa9f13ee9f98f95c) }

var fileDescriptor_aa9f13ee9f98f95c = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x4f, 0x83, 0x40,
	0x10, 0x85, 0x45, 0x6d, 0x29, 0x63, 0xa3, 0x71, 0x2f, 0x12, 0x1b, 0x13, 0x42, 0x8c, 0xe9, 0x89,
	0x98, 0xfa, 0x0b, 0xe8, 0xc9, 0x5e, 0x4c, 0x83, 0x07, 0x8f, 0x04, 0x99, 0x69, 0xc5, 0x00, 0x8b,
	0xb3, 0x8b, 0xfa, 0x9b, 0xfc, 0x95, 0x66, 0x96, 0x6a, 0xda, 0xd3, 0xce, 0x7c, 0xef, 0xed, 0xcb,
	0x3c, 0x50, 0xad, 0x46, 0xca, 0x99, 0x3e, 0x7a, 0x32, 0x36, 0xe9, 0x58, 0x5b, 0xad, 0x46, 0xee,
	0x89, 0x7f, 0x3c, 0x38, 0x7b, 0xd2, 0x48, 0xd9, 0x20, 0xaa, 0x1b, 0x80, 0xb2, 0xee, 0x8d, 0x25,
	0xce, 0x2b, 0x0c, 0xbd, 0xc8, 0x9b, 0x07, 0x59, 0xb0, 0x23, 0x2b, 0x54, 0x57, 0xe0, 0xbb, 0xac,
	0x0a, 0xc3, 0x63, 0xa7, 0x8d, 0x65, 0x5d, 0xa1, 0x8a, 0x60, 0xca, 0x4d, 0xee, 0xb4, 0x02, 0x91,
	0xc3, 0x13, 0xa7, 0x02, 0x37, 0x12, 0x9e, 0x22, 0xb2, 0xba, 0x85, 0x73, 0x2e, 0x36, 0x76, 0xcf,
	0x73, 0xea, 0x3c, 0x53, 0xa1, 0xff, 0xae, 0x19, 0x04, 0xef, 0xba, 0x6a, 0x73, 0x81, 0xe1, 0x28,
	0xf2, 0xe6, 0x93, 0x6c, 0x22, 0x20, 0x2b, 0x36, 0x36, 0xbe, 0x03, 0x18, 0x6e, 0xb5, 0x3d, 0xb7,
	0x2a, 0x04, 0xbf, 0x21, 0x63, 0x8a, 0x2d, 0xed, 0xee, 0xfc, 0x5b, 0x17, 0xe9, 0xd0, 0xe9, 0x99,
	0xf8, 0xb3, 0x2a, 0x49, 0x2d, 0xc0, 0x4f, 0x11, 0x85, 0x28, 0x35, 0xb4, 0x4f, 0xf6, 0x2a, 0x5f,
	0x5f, 0x1e, 0x30, 0x89, 0x8e, 0x8f, 0x96, 0xf7, 0x30, 0xab, 0x74, 0xb2, 0xe5, 0xae, 0x4c, 0xe8,
	0xbb, 0x68, 0xba, 0x9a, 0x4c, 0xf2, 0x46, 0x75, 0xad, 0xbf, 0x34, 0xd7, 0xb8, 0xbc, 0x78, 0x94,
	0xf9, 0x45, 0xe6, 0xb5, 0x7c, 0x5e, 0x7b, 0xaf, 0x63, 0x97, 0xf2, 0xf0, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x0a, 0xd0, 0x3d, 0x60, 0x6d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeServiceClient is the client API for NodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeServiceClient interface {
	AddNode(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeReturn, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) AddNode(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeReturn, error) {
	out := new(NodeReturn)
	err := c.cc.Invoke(ctx, "/proto.NodeService/AddNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServiceServer is the server API for NodeService service.
type NodeServiceServer interface {
	AddNode(context.Context, *NodeRequest) (*NodeReturn, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_AddNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).AddNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeService/AddNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).AddNode(ctx, req.(*NodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddNode",
			Handler:    _NodeService_AddNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node_request.proto",
}
