// Code generated by MockGen. DO NOT EDIT.
// Source: client/rm_client.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "gitlab.zalopay.vn/quannm4/mas/model"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CreatePhase1Request mocks base method
func (m *MockClient) CreatePhase1Request(instruction model.Instruction) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePhase1Request", instruction)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CreatePhase1Request indicates an expected call of CreatePhase1Request
func (mr *MockClientMockRecorder) CreatePhase1Request(instruction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePhase1Request", reflect.TypeOf((*MockClient)(nil).CreatePhase1Request), instruction)
}

// CreatePhase2CommitRequest mocks base method
func (m *MockClient) CreatePhase2CommitRequest(instruction model.Instruction) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePhase2CommitRequest", instruction)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CreatePhase2CommitRequest indicates an expected call of CreatePhase2CommitRequest
func (mr *MockClientMockRecorder) CreatePhase2CommitRequest(instruction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePhase2CommitRequest", reflect.TypeOf((*MockClient)(nil).CreatePhase2CommitRequest), instruction)
}

// CreatePhase2RollbackRequest mocks base method
func (m *MockClient) CreatePhase2RollbackRequest(data model.Instruction) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePhase2RollbackRequest", data)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CreatePhase2RollbackRequest indicates an expected call of CreatePhase2RollbackRequest
func (mr *MockClientMockRecorder) CreatePhase2RollbackRequest(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePhase2RollbackRequest", reflect.TypeOf((*MockClient)(nil).CreatePhase2RollbackRequest), data)
}
